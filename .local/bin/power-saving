#!/bin/sh

[[ "$(id -u)" != "0" ]] && { echo "Must be root to run this command"; exit 1; }

eth_interfaces="$(\ip link show | awk -F ': ' '{print $2}' | grep '^e')"
max_brightness=$(cat /sys/class/backlight/acpi_video0/max_brightness)
dim=$(printf "%.0f" $(awk -v m=$max_brightness 'BEGIN { print m * 0.5}'))

start() {
  echo "Enabling power saving mode"
  # Bus
  for i in /sys/bus/*/devices/*/power/control; do echo auto > $i; done

  # USB autosuspend
  for i in /sys/bus/usb/devices/*/power/autosuspend; do echo 1 > $i; done

  # Disable the NMI Watchdog
  echo 0 > /proc/sys/kernel/watchdog
  echo 0 > /proc/sys/kernel/nmi_watchdog

  # CPU
  for i in /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor; do echo powersave > $i; done

  # Be smart about when to do IO
  echo 5 > /proc/sys/vm/laptop_mode
  # How much memory can be used by dirty data.
  echo 90 > /proc/sys/vm/dirty_ratio
  # Lower memory where pdflush is told to stop when it is writing dirty data.
  echo 1 > /proc/sys/vm/dirty_background_ratio

  # set buffer writes to once every 600 sec.
  # a power failure would loose this amount of data.
  echo 6000 > /proc/sys/vm/dirty_expire_centisecs
  echo 6000 > /proc/sys/vm/dirty_writeback_centisecs

  # Reduce power for SATA link power management
  for i in /sys/class/scsi_host/host*/link_power_management_policy; do echo min_power > $i; done

  # Runtime power-management for PCI devices
  for i in /sys/bus/pci/devices/*/power/control; do echo auto > $i; done

  # Enable audio codec power management
  echo 1 > /sys/module/snd_hda_intel/parameters/power_save
  echo Y > /sys/module/snd_hda_intel/parameters/power_save_controller

  # Disable Wake-on-LAN
  while read i; do ethtool -s "$i" wol d; done <<< "$eth_interfaces"

  # Energy Star feature
  xset +dpms
  xset dpms 0 0 120

  # Dim screen
  for i in /sys/class/backlight/acpi_video*/brightness; do echo $dim > $i; done
}

stop() {
  echo "Disabling power saving mode"

  # Bus
  for i in /sys/bus/*/devices/*/power/control; do echo on > $i; done

  # USB autosuspend
  for i in /sys/bus/usb/devices/*/power/autosuspend; do echo 600 > $i; done
  # http://www.mjmwired.net/kernel/Documentation/usb/power-management.txt#130
  for i in /sys/bus/usb/devices/*/power/control; do echo on > $i; done

  # Enable the NMI watchdog
  echo 1 > /proc/sys/kernel/watchdog
  echo 1 > /proc/sys/kernel/nmi_watchdog

  # CPU
  for i in /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor; do echo ondemand > $i; done

  # Disable laptop mode
  echo 0 > /proc/sys/vm/laptop_mode
  # Decrease dirty data
  echo 30 > /proc/sys/vm/dirty_ratio
  echo 30 > /proc/sys/vm/dirty_background_ratio

  # set buffer writes to once every 6 sec.
  echo 600 > /proc/sys/vm/dirty_expire_centisecs
  echo 600 > /proc/sys/vm/dirty_writeback_centisecs

  # Change power-saving for SATA devices
  for i in /sys/class/scsi_host/host*/link_power_management_policy; do echo max_performance > $i; done

  # Enable full power for PCI devices
  for i in /sys/bus/pci/devices/*/power/control ; do echo on > ${i}; done

  # Disable audio codec power management
  echo 0 > /sys/module/snd_hda_intel/parameters/power_save
  echo Y > /sys/module/snd_hda_intel/parameters/power_save_controller

  # Enable Wake-on-LAN
  # while read i; do ethtool -s "$i" wol g; done <<< "$eth_interfaces"

  # Energy Star feature
  xset -dpms

  # Dim screen
  for i in /sys/class/backlight/acpi_video*/brightness; do echo $max_brightness > $i; done
}

detectMode() {
  [ "$(cat /sys/class/power_supply/AC/online)" -eq "0" ] && start || stop
}

case $1 in
  start|stop) "$1" ;;
  *) detectMode ;;
esac
