#!/bin/bash

# Whether or not we have a command
# http://dotfiles.org/~steve/.bashrc
have() {
  type "$1" &> /dev/null
}

# Filter through running processes
psgrep() {
  ps aux | grep -e $1
}

# One command to rule them all
# http://dotfiles.org/~krib/.bashrc
extract () {
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2)  tar xjf $1      ;;
      *.tar.gz)   tar xzf $1      ;;
      *.bz2)      bunzip2 $1      ;;
      *.rar)      rar x $1        ;;
      *.gz)       gunzip $1       ;;
      *.tar)      tar xf $1       ;;
      *.tbz2)     tar xjf $1      ;;
      *.tgz)      tar xzf $1      ;;
      *.zip)      unzip $1        ;;
      *.Z)        uncompress $1   ;;
      *)          echo "'$1' cannot be extracted via extract()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

# http://dotfiles.org/~krib/.bashrc
bu () {
  if [ "$(dirname $1)" == "." ]; then
    mkdir -p ~/.backup/$(pwd)
    cp $1 ~/.backup/$(pwd)/$1-$(date +%Y%m%d%H%M).backup
  else
    mkdir -p ~/.backup/$(dirname $1)
    cp $1 ~/.backup/$1-$(date +%Y%m%d%H%M).backup
  fi
}

# http://dotfiles.org/~kparnell/.bashrc
mkcdir () {
  mkdir -p $1
  cd $1
}

# Start an HTTP server from a directory, optionally specifying the port
# https://github.com/mathiasbynens/dotfiles/blob/master/.functions
server() {
  local port="${1:-8000}"
  [[ -n $BROWSER ]] && $BROWSER "http://localhost:${port}/"
  # Set the default Content-Type to `text/plain` instead of `application/octet-stream`
  # And serve everything as UTF-8 (although not technically correct, this doesnâ€™t break anything for binary files)
  python -c $'import SimpleHTTPServer;\nmap = SimpleHTTPServer.SimpleHTTPRequestHandler.extensions_map;\nmap[""] = "text/plain";\nfor key, value in map.items():\n\tmap[key] = value + ";charset=UTF-8";\nSimpleHTTPServer.test();' "$port"
}

# Base on http://dotfiles.org/~rprice/.bashrc
record_desktop() {
  local current_dir=$(pwd)
  local output_dir='/tmp/screenrec'
  local ip=$(dig +short myip.opendns.com @resolver1.opendns.com)
  mkdir -p $output_dir && cd $output_dir && python -m SimpleHTTPServer 8000 &
  if [ ! $? ]; then
    cd $current_dir
    echo "Preview with 'vlc http://${ip}:8000/out.mpg'"
    echo "Begin recording in 5 sec"
    sleep 5
    ffmpeg -f x11grab -s wxga -r 25 -i :0.0  -sameq ${output_dir}/out.mpg
  fi
}
